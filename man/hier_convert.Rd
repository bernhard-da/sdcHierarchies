% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hier_convert.R
\name{hier_convert}
\alias{hier_convert}
\title{Converts hierarchies into different formats}
\usage{
hier_convert(h, format = "df", verbose = FALSE)
}
\arguments{
\item{h}{a (nested) hierarchy created using \code{\link{hier_create}} or modified
using \code{\link{hier_add}}, \code{\link{hier_delete}} or \code{\link{hier_rename}}.}

\item{format}{(character) specifying the export format. Possible choices are:
\itemize{
\item \strong{"df"}: a \code{data.frame} with two columns. The first columns contains a string
containing as many \code{@} as the level of the node in the string (e.g \code{@} corresponds to the overall
total while \code{@} would be all codes contributing to the total. The second column contains the names
of the levels.
\item \strong{"dt"}: like the \code{df}-version but this result is converted to a \code{data.table}
\item \strong{"argus"}: used to create hrc-files suitable for tau-argus
\item \strong{"json"}: json format suitable e.g. as input for the shinyTree package.
\item \strong{"code"}: code required to generate the hierarchy
\item \strong{"sdc"}: a \code{list} which is a suitable input for \code{sdcTable}
}}

\item{verbose}{(logical) if true, the result of the conversion will not only
be (invisibly) returned but also printed in the prompt.}
}
\value{
a (nested) sdc hierarchy tree
}
\description{
This functions allows to convert nested hierarchies into
other data structures.
}
\examples{
## for examples, see hier_vignette()
}
\seealso{
hier_add hier_delete hier_rename hier_export
hier_convert hier_app hier_info
}
